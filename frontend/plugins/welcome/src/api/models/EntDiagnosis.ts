/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDiagnosisEdges,
    EntDiagnosisEdgesFromJSON,
    EntDiagnosisEdgesFromJSONTyped,
    EntDiagnosisEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntDiagnosis
 */
export interface EntDiagnosis {
    /**
     * Opinionresult holds the value of the "Opinionresult" field.
     * @type {string}
     * @memberof EntDiagnosis
     */
    opinionresult?: string;
    /**
     * DiagnosisDate holds the value of the "diagnosisDate" field.
     * @type {string}
     * @memberof EntDiagnosis
     */
    diagnosisDate?: string;
    /**
     * 
     * @type {EntDiagnosisEdges}
     * @memberof EntDiagnosis
     */
    edges?: EntDiagnosisEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntDiagnosis
     */
    id?: number;
    /**
     * Symptom holds the value of the "symptom" field.
     * @type {string}
     * @memberof EntDiagnosis
     */
    symptom?: string;
}

export function EntDiagnosisFromJSON(json: any): EntDiagnosis {
    return EntDiagnosisFromJSONTyped(json, false);
}

export function EntDiagnosisFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntDiagnosis {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'opinionresult': !exists(json, 'Opinionresult') ? undefined : json['Opinionresult'],
        'diagnosisDate': !exists(json, 'diagnosisDate') ? undefined : json['diagnosisDate'],
        'edges': !exists(json, 'edges') ? undefined : EntDiagnosisEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'symptom': !exists(json, 'symptom') ? undefined : json['symptom'],
    };
}

export function EntDiagnosisToJSON(value?: EntDiagnosis | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Opinionresult': value.opinionresult,
        'diagnosisDate': value.diagnosisDate,
        'edges': EntDiagnosisEdgesToJSON(value.edges),
        'id': value.id,
        'symptom': value.symptom,
    };
}


