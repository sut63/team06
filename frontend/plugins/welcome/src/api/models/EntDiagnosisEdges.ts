/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDoctor,
    EntDoctorFromJSON,
    EntDoctorFromJSONTyped,
    EntDoctorToJSON,
    EntPatient,
    EntPatientFromJSON,
    EntPatientFromJSONTyped,
    EntPatientToJSON,
    EntTreatmentType,
    EntTreatmentTypeFromJSON,
    EntTreatmentTypeFromJSONTyped,
    EntTreatmentTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntDiagnosisEdges
 */
export interface EntDiagnosisEdges {
    /**
     * 
     * @type {EntDoctor}
     * @memberof EntDiagnosisEdges
     */
    doctorName?: EntDoctor;
    /**
     * 
     * @type {EntPatient}
     * @memberof EntDiagnosisEdges
     */
    patient?: EntPatient;
    /**
     * 
     * @type {EntTreatmentType}
     * @memberof EntDiagnosisEdges
     */
    type?: EntTreatmentType;
}

export function EntDiagnosisEdgesFromJSON(json: any): EntDiagnosisEdges {
    return EntDiagnosisEdgesFromJSONTyped(json, false);
}

export function EntDiagnosisEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntDiagnosisEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'doctorName': !exists(json, 'DoctorName') ? undefined : EntDoctorFromJSON(json['DoctorName']),
        'patient': !exists(json, 'Patient') ? undefined : EntPatientFromJSON(json['Patient']),
        'type': !exists(json, 'Type') ? undefined : EntTreatmentTypeFromJSON(json['Type']),
    };
}

export function EntDiagnosisEdgesToJSON(value?: EntDiagnosisEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'doctorName': EntDoctorToJSON(value.doctorName),
        'patient': EntPatientToJSON(value.patient),
        'type': EntTreatmentTypeToJSON(value.type),
    };
}


