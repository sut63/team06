// Code generated by entc, DO NOT EDIT.

package triageresult

import (
	"time"
)

const (
	// Label holds the string label denoting the triageresult type in the database.
	Label = "triage_result"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSymptom holds the string denoting the symptom field in the database.
	FieldSymptom = "symptom"
	// FieldTriageDate holds the string denoting the triagedate field in the database.
	FieldTriageDate = "triage_date"

	// EdgeUrgencyLevel holds the string denoting the urgencylevel edge name in mutations.
	EdgeUrgencyLevel = "urgencyLevel"
	// EdgeDepartment holds the string denoting the department edge name in mutations.
	EdgeDepartment = "department"
	// EdgeNurse holds the string denoting the nurse edge name in mutations.
	EdgeNurse = "nurse"
	// EdgePatient holds the string denoting the patient edge name in mutations.
	EdgePatient = "patient"

	// Table holds the table name of the triageresult in the database.
	Table = "triage_results"
	// UrgencyLevelTable is the table the holds the urgencyLevel relation/edge.
	UrgencyLevelTable = "triage_results"
	// UrgencyLevelInverseTable is the table name for the UrgencyLevel entity.
	// It exists in this package in order to avoid circular dependency with the "urgencylevel" package.
	UrgencyLevelInverseTable = "urgency_levels"
	// UrgencyLevelColumn is the table column denoting the urgencyLevel relation/edge.
	UrgencyLevelColumn = "urgency_level_triage_result"
	// DepartmentTable is the table the holds the department relation/edge.
	DepartmentTable = "triage_results"
	// DepartmentInverseTable is the table name for the Department entity.
	// It exists in this package in order to avoid circular dependency with the "department" package.
	DepartmentInverseTable = "departments"
	// DepartmentColumn is the table column denoting the department relation/edge.
	DepartmentColumn = "department_triage_result"
	// NurseTable is the table the holds the nurse relation/edge.
	NurseTable = "triage_results"
	// NurseInverseTable is the table name for the Nurse entity.
	// It exists in this package in order to avoid circular dependency with the "nurse" package.
	NurseInverseTable = "nurses"
	// NurseColumn is the table column denoting the nurse relation/edge.
	NurseColumn = "nurse_triage_result"
	// PatientTable is the table the holds the patient relation/edge.
	PatientTable = "triage_results"
	// PatientInverseTable is the table name for the Patient entity.
	// It exists in this package in order to avoid circular dependency with the "patient" package.
	PatientInverseTable = "patients"
	// PatientColumn is the table column denoting the patient relation/edge.
	PatientColumn = "patient_triage_result"
)

// Columns holds all SQL columns for triageresult fields.
var Columns = []string{
	FieldID,
	FieldSymptom,
	FieldTriageDate,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the TriageResult type.
var ForeignKeys = []string{
	"department_triage_result",
	"nurse_triage_result",
	"patient_triage_result",
	"urgency_level_triage_result",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// SymptomValidator is a validator for the "symptom" field. It is called by the builders before save.
	SymptomValidator func(string) error
	// DefaultTriageDate holds the default value on creation for the "triageDate" field.
	DefaultTriageDate func() time.Time
)
