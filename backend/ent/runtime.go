// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/team06/app/ent/appointmentresults"
	"github.com/team06/app/ent/bloodtype"
	"github.com/team06/app/ent/department"
	"github.com/team06/app/ent/diagnosis"
	"github.com/team06/app/ent/doctor"
	"github.com/team06/app/ent/gender"
	"github.com/team06/app/ent/hospital"
	"github.com/team06/app/ent/medicalprocedure"
	"github.com/team06/app/ent/medicalrecord"
	"github.com/team06/app/ent/nurse"
	"github.com/team06/app/ent/patient"
	"github.com/team06/app/ent/prefix"
	"github.com/team06/app/ent/righttotreatment"
	"github.com/team06/app/ent/righttotreatmenttype"
	"github.com/team06/app/ent/room"
	"github.com/team06/app/ent/schema"
	"github.com/team06/app/ent/treatmenttype"
	"github.com/team06/app/ent/triageresult"
	"github.com/team06/app/ent/urgencylevel"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	appointmentresultsFields := schema.AppointmentResults{}.Fields()
	_ = appointmentresultsFields
	// appointmentresultsDescCauseAppoint is the schema descriptor for causeAppoint field.
	appointmentresultsDescCauseAppoint := appointmentresultsFields[0].Descriptor()
	// appointmentresults.CauseAppointValidator is a validator for the "causeAppoint" field. It is called by the builders before save.
	appointmentresults.CauseAppointValidator = appointmentresultsDescCauseAppoint.Validators[0].(func(string) error)
	// appointmentresultsDescAdvice is the schema descriptor for advice field.
	appointmentresultsDescAdvice := appointmentresultsFields[1].Descriptor()
	// appointmentresults.AdviceValidator is a validator for the "advice" field. It is called by the builders before save.
	appointmentresults.AdviceValidator = appointmentresultsDescAdvice.Validators[0].(func(string) error)
	// appointmentresultsDescAddtimeSave is the schema descriptor for addtimeSave field.
	appointmentresultsDescAddtimeSave := appointmentresultsFields[4].Descriptor()
	// appointmentresults.DefaultAddtimeSave holds the default value on creation for the addtimeSave field.
	appointmentresults.DefaultAddtimeSave = appointmentresultsDescAddtimeSave.Default.(func() time.Time)
	// appointmentresultsDescHourBeforeAppoint is the schema descriptor for hourBeforeAppoint field.
	appointmentresultsDescHourBeforeAppoint := appointmentresultsFields[5].Descriptor()
	// appointmentresults.DefaultHourBeforeAppoint holds the default value on creation for the hourBeforeAppoint field.
	appointmentresults.DefaultHourBeforeAppoint = appointmentresultsDescHourBeforeAppoint.Default.(int)
	// appointmentresults.HourBeforeAppointValidator is a validator for the "hourBeforeAppoint" field. It is called by the builders before save.
	appointmentresults.HourBeforeAppointValidator = appointmentresultsDescHourBeforeAppoint.Validators[0].(func(int) error)
	// appointmentresultsDescMinuteBeforeAppoint is the schema descriptor for minuteBeforeAppoint field.
	appointmentresultsDescMinuteBeforeAppoint := appointmentresultsFields[6].Descriptor()
	// appointmentresults.DefaultMinuteBeforeAppoint holds the default value on creation for the minuteBeforeAppoint field.
	appointmentresults.DefaultMinuteBeforeAppoint = appointmentresultsDescMinuteBeforeAppoint.Default.(int)
	// appointmentresults.MinuteBeforeAppointValidator is a validator for the "minuteBeforeAppoint" field. It is called by the builders before save.
	appointmentresults.MinuteBeforeAppointValidator = appointmentresultsDescMinuteBeforeAppoint.Validators[0].(func(int) error)
	bloodtypeFields := schema.BloodType{}.Fields()
	_ = bloodtypeFields
	// bloodtypeDescBloodValue is the schema descriptor for bloodValue field.
	bloodtypeDescBloodValue := bloodtypeFields[0].Descriptor()
	// bloodtype.BloodValueValidator is a validator for the "bloodValue" field. It is called by the builders before save.
	bloodtype.BloodValueValidator = bloodtypeDescBloodValue.Validators[0].(func(string) error)
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescDepartmentName is the schema descriptor for departmentName field.
	departmentDescDepartmentName := departmentFields[0].Descriptor()
	// department.DepartmentNameValidator is a validator for the "departmentName" field. It is called by the builders before save.
	department.DepartmentNameValidator = departmentDescDepartmentName.Validators[0].(func(string) error)
	diagnosisFields := schema.Diagnosis{}.Fields()
	_ = diagnosisFields
	// diagnosisDescSymptom is the schema descriptor for symptom field.
	diagnosisDescSymptom := diagnosisFields[0].Descriptor()
	// diagnosis.SymptomValidator is a validator for the "symptom" field. It is called by the builders before save.
	diagnosis.SymptomValidator = diagnosisDescSymptom.Validators[0].(func(string) error)
	// diagnosisDescOpinionresult is the schema descriptor for Opinionresult field.
	diagnosisDescOpinionresult := diagnosisFields[1].Descriptor()
	// diagnosis.OpinionresultValidator is a validator for the "Opinionresult" field. It is called by the builders before save.
	diagnosis.OpinionresultValidator = diagnosisDescOpinionresult.Validators[0].(func(string) error)
	// diagnosisDescNote is the schema descriptor for note field.
	diagnosisDescNote := diagnosisFields[2].Descriptor()
	// diagnosis.NoteValidator is a validator for the "note" field. It is called by the builders before save.
	diagnosis.NoteValidator = diagnosisDescNote.Validators[0].(func(string) error)
	doctorFields := schema.Doctor{}.Fields()
	_ = doctorFields
	// doctorDescDoctorName is the schema descriptor for doctorName field.
	doctorDescDoctorName := doctorFields[0].Descriptor()
	// doctor.DoctorNameValidator is a validator for the "doctorName" field. It is called by the builders before save.
	doctor.DoctorNameValidator = doctorDescDoctorName.Validators[0].(func(string) error)
	// doctorDescDoctorUsername is the schema descriptor for doctorUsername field.
	doctorDescDoctorUsername := doctorFields[1].Descriptor()
	// doctor.DoctorUsernameValidator is a validator for the "doctorUsername" field. It is called by the builders before save.
	doctor.DoctorUsernameValidator = doctorDescDoctorUsername.Validators[0].(func(string) error)
	// doctorDescDoctorPassword is the schema descriptor for doctorPassword field.
	doctorDescDoctorPassword := doctorFields[2].Descriptor()
	// doctor.DoctorPasswordValidator is a validator for the "doctorPassword" field. It is called by the builders before save.
	doctor.DoctorPasswordValidator = doctorDescDoctorPassword.Validators[0].(func(string) error)
	genderFields := schema.Gender{}.Fields()
	_ = genderFields
	// genderDescGenderValue is the schema descriptor for genderValue field.
	genderDescGenderValue := genderFields[0].Descriptor()
	// gender.GenderValueValidator is a validator for the "genderValue" field. It is called by the builders before save.
	gender.GenderValueValidator = genderDescGenderValue.Validators[0].(func(string) error)
	hospitalFields := schema.Hospital{}.Fields()
	_ = hospitalFields
	// hospitalDescHospitalName is the schema descriptor for HospitalName field.
	hospitalDescHospitalName := hospitalFields[0].Descriptor()
	// hospital.HospitalNameValidator is a validator for the "HospitalName" field. It is called by the builders before save.
	hospital.HospitalNameValidator = hospitalDescHospitalName.Validators[0].(func(string) error)
	medicalprocedureFields := schema.MedicalProcedure{}.Fields()
	_ = medicalprocedureFields
	// medicalprocedureDescProcedureOrder is the schema descriptor for procedureOrder field.
	medicalprocedureDescProcedureOrder := medicalprocedureFields[0].Descriptor()
	// medicalprocedure.ProcedureOrderValidator is a validator for the "procedureOrder" field. It is called by the builders before save.
	medicalprocedure.ProcedureOrderValidator = medicalprocedureDescProcedureOrder.Validators[0].(func(string) error)
	// medicalprocedureDescProcedureRoom is the schema descriptor for procedureRoom field.
	medicalprocedureDescProcedureRoom := medicalprocedureFields[1].Descriptor()
	// medicalprocedure.ProcedureRoomValidator is a validator for the "procedureRoom" field. It is called by the builders before save.
	medicalprocedure.ProcedureRoomValidator = func() func(string) error {
		validators := medicalprocedureDescProcedureRoom.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(procedureRoom string) error {
			for _, fn := range fns {
				if err := fn(procedureRoom); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// medicalprocedureDescProcedureDescripe is the schema descriptor for procedureDescripe field.
	medicalprocedureDescProcedureDescripe := medicalprocedureFields[3].Descriptor()
	// medicalprocedure.ProcedureDescripeValidator is a validator for the "procedureDescripe" field. It is called by the builders before save.
	medicalprocedure.ProcedureDescripeValidator = medicalprocedureDescProcedureDescripe.Validators[0].(func(string) error)
	medicalrecordFields := schema.MedicalRecord{}.Fields()
	_ = medicalrecordFields
	// medicalrecordDescEmail is the schema descriptor for email field.
	medicalrecordDescEmail := medicalrecordFields[0].Descriptor()
	// medicalrecord.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	medicalrecord.EmailValidator = medicalrecordDescEmail.Validators[0].(func(string) error)
	// medicalrecordDescPassword is the schema descriptor for password field.
	medicalrecordDescPassword := medicalrecordFields[1].Descriptor()
	// medicalrecord.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	medicalrecord.PasswordValidator = medicalrecordDescPassword.Validators[0].(func(string) error)
	// medicalrecordDescName is the schema descriptor for name field.
	medicalrecordDescName := medicalrecordFields[2].Descriptor()
	// medicalrecord.NameValidator is a validator for the "name" field. It is called by the builders before save.
	medicalrecord.NameValidator = medicalrecordDescName.Validators[0].(func(string) error)
	nurseFields := schema.Nurse{}.Fields()
	_ = nurseFields
	// nurseDescNurseName is the schema descriptor for nurseName field.
	nurseDescNurseName := nurseFields[0].Descriptor()
	// nurse.NurseNameValidator is a validator for the "nurseName" field. It is called by the builders before save.
	nurse.NurseNameValidator = nurseDescNurseName.Validators[0].(func(string) error)
	// nurseDescNurseUsername is the schema descriptor for nurseUsername field.
	nurseDescNurseUsername := nurseFields[1].Descriptor()
	// nurse.NurseUsernameValidator is a validator for the "nurseUsername" field. It is called by the builders before save.
	nurse.NurseUsernameValidator = nurseDescNurseUsername.Validators[0].(func(string) error)
	// nurseDescNursePassword is the schema descriptor for nursePassword field.
	nurseDescNursePassword := nurseFields[2].Descriptor()
	// nurse.NursePasswordValidator is a validator for the "nursePassword" field. It is called by the builders before save.
	nurse.NursePasswordValidator = nurseDescNursePassword.Validators[0].(func(string) error)
	patientFields := schema.Patient{}.Fields()
	_ = patientFields
	// patientDescPersonalID is the schema descriptor for personalID field.
	patientDescPersonalID := patientFields[0].Descriptor()
	// patient.PersonalIDValidator is a validator for the "personalID" field. It is called by the builders before save.
	patient.PersonalIDValidator = func() func(string) error {
		validators := patientDescPersonalID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(personalID string) error {
			for _, fn := range fns {
				if err := fn(personalID); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// patientDescHospitalNumber is the schema descriptor for hospitalNumber field.
	patientDescHospitalNumber := patientFields[1].Descriptor()
	// patient.HospitalNumberValidator is a validator for the "hospitalNumber" field. It is called by the builders before save.
	patient.HospitalNumberValidator = patientDescHospitalNumber.Validators[0].(func(string) error)
	// patientDescPatientName is the schema descriptor for patientName field.
	patientDescPatientName := patientFields[2].Descriptor()
	// patient.PatientNameValidator is a validator for the "patientName" field. It is called by the builders before save.
	patient.PatientNameValidator = patientDescPatientName.Validators[0].(func(string) error)
	// patientDescDrugAllergy is the schema descriptor for drugAllergy field.
	patientDescDrugAllergy := patientFields[3].Descriptor()
	// patient.DrugAllergyValidator is a validator for the "drugAllergy" field. It is called by the builders before save.
	patient.DrugAllergyValidator = patientDescDrugAllergy.Validators[0].(func(string) error)
	// patientDescMobileNumber is the schema descriptor for mobileNumber field.
	patientDescMobileNumber := patientFields[4].Descriptor()
	// patient.MobileNumberValidator is a validator for the "mobileNumber" field. It is called by the builders before save.
	patient.MobileNumberValidator = func() func(string) error {
		validators := patientDescMobileNumber.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(mobileNumber string) error {
			for _, fn := range fns {
				if err := fn(mobileNumber); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// patientDescAdded is the schema descriptor for added field.
	patientDescAdded := patientFields[5].Descriptor()
	// patient.DefaultAdded holds the default value on creation for the added field.
	patient.DefaultAdded = patientDescAdded.Default.(func() time.Time)
	prefixFields := schema.Prefix{}.Fields()
	_ = prefixFields
	// prefixDescPrefixValue is the schema descriptor for prefixValue field.
	prefixDescPrefixValue := prefixFields[0].Descriptor()
	// prefix.PrefixValueValidator is a validator for the "prefixValue" field. It is called by the builders before save.
	prefix.PrefixValueValidator = prefixDescPrefixValue.Validators[0].(func(string) error)
	righttotreatmentFields := schema.RightToTreatment{}.Fields()
	_ = righttotreatmentFields
	// righttotreatmentDescTel is the schema descriptor for tel field.
	righttotreatmentDescTel := righttotreatmentFields[2].Descriptor()
	// righttotreatment.TelValidator is a validator for the "tel" field. It is called by the builders before save.
	righttotreatment.TelValidator = righttotreatmentDescTel.Validators[0].(func(string) error)
	// righttotreatmentDescIdennum is the schema descriptor for idennum field.
	righttotreatmentDescIdennum := righttotreatmentFields[3].Descriptor()
	// righttotreatment.IdennumValidator is a validator for the "idennum" field. It is called by the builders before save.
	righttotreatment.IdennumValidator = func() func(string) error {
		validators := righttotreatmentDescIdennum.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(idennum string) error {
			for _, fn := range fns {
				if err := fn(idennum); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// righttotreatmentDescAge is the schema descriptor for age field.
	righttotreatmentDescAge := righttotreatmentFields[4].Descriptor()
	// righttotreatment.AgeValidator is a validator for the "age" field. It is called by the builders before save.
	righttotreatment.AgeValidator = righttotreatmentDescAge.Validators[0].(func(int) error)
	righttotreatmenttypeFields := schema.RightToTreatmentType{}.Fields()
	_ = righttotreatmenttypeFields
	// righttotreatmenttypeDescTypeName is the schema descriptor for TypeName field.
	righttotreatmenttypeDescTypeName := righttotreatmenttypeFields[0].Descriptor()
	// righttotreatmenttype.TypeNameValidator is a validator for the "TypeName" field. It is called by the builders before save.
	righttotreatmenttype.TypeNameValidator = righttotreatmenttypeDescTypeName.Validators[0].(func(string) error)
	roomFields := schema.Room{}.Fields()
	_ = roomFields
	// roomDescRoomName is the schema descriptor for roomName field.
	roomDescRoomName := roomFields[0].Descriptor()
	// room.RoomNameValidator is a validator for the "roomName" field. It is called by the builders before save.
	room.RoomNameValidator = roomDescRoomName.Validators[0].(func(string) error)
	treatmenttypeFields := schema.TreatmentType{}.Fields()
	_ = treatmenttypeFields
	// treatmenttypeDescType is the schema descriptor for Type field.
	treatmenttypeDescType := treatmenttypeFields[0].Descriptor()
	// treatmenttype.TypeValidator is a validator for the "Type" field. It is called by the builders before save.
	treatmenttype.TypeValidator = treatmenttypeDescType.Validators[0].(func(string) error)
	triageresultFields := schema.TriageResult{}.Fields()
	_ = triageresultFields
	// triageresultDescHeight is the schema descriptor for height field.
	triageresultDescHeight := triageresultFields[0].Descriptor()
	// triageresult.HeightValidator is a validator for the "height" field. It is called by the builders before save.
	triageresult.HeightValidator = triageresultDescHeight.Validators[0].(func(float64) error)
	// triageresultDescWeight is the schema descriptor for weight field.
	triageresultDescWeight := triageresultFields[1].Descriptor()
	// triageresult.WeightValidator is a validator for the "weight" field. It is called by the builders before save.
	triageresult.WeightValidator = triageresultDescWeight.Validators[0].(func(float64) error)
	// triageresultDescPressure is the schema descriptor for pressure field.
	triageresultDescPressure := triageresultFields[2].Descriptor()
	// triageresult.PressureValidator is a validator for the "pressure" field. It is called by the builders before save.
	triageresult.PressureValidator = triageresultDescPressure.Validators[0].(func(float64) error)
	// triageresultDescSymptom is the schema descriptor for symptom field.
	triageresultDescSymptom := triageresultFields[3].Descriptor()
	// triageresult.SymptomValidator is a validator for the "symptom" field. It is called by the builders before save.
	triageresult.SymptomValidator = triageresultDescSymptom.Validators[0].(func(string) error)
	// triageresultDescTriageDate is the schema descriptor for triageDate field.
	triageresultDescTriageDate := triageresultFields[4].Descriptor()
	// triageresult.DefaultTriageDate holds the default value on creation for the triageDate field.
	triageresult.DefaultTriageDate = triageresultDescTriageDate.Default.(func() time.Time)
	urgencylevelFields := schema.UrgencyLevel{}.Fields()
	_ = urgencylevelFields
	// urgencylevelDescUrgencyName is the schema descriptor for urgencyName field.
	urgencylevelDescUrgencyName := urgencylevelFields[0].Descriptor()
	// urgencylevel.UrgencyNameValidator is a validator for the "urgencyName" field. It is called by the builders before save.
	urgencylevel.UrgencyNameValidator = urgencylevelDescUrgencyName.Validators[0].(func(string) error)
}
